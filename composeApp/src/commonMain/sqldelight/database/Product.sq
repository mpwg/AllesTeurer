-- Product table for managing product catalog and categories
CREATE TABLE IF NOT EXISTS Product (
    id TEXT PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    normalized_name TEXT NOT NULL, -- For fuzzy matching
    category TEXT,
    subcategory TEXT,
    brand TEXT,
    barcode TEXT,
    unit_type TEXT DEFAULT 'piece', -- piece, kg, g, l, ml, etc.
    created_at INTEGER NOT NULL, -- Unix timestamp
    updated_at INTEGER NOT NULL  -- Unix timestamp
);

-- Indexes for fast lookups
CREATE INDEX IF NOT EXISTS idx_product_name ON Product(name);
CREATE INDEX IF NOT EXISTS idx_product_normalized_name ON Product(normalized_name);
CREATE INDEX IF NOT EXISTS idx_product_category ON Product(category);
CREATE INDEX IF NOT EXISTS idx_product_brand ON Product(brand);
CREATE INDEX IF NOT EXISTS idx_product_barcode ON Product(barcode);

-- Product queries
insertProduct:
INSERT INTO Product(id, name, normalized_name, category, subcategory, brand, barcode, unit_type, created_at, updated_at)
VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

selectProductById:
SELECT * FROM Product WHERE id = ?;

selectProductByName:
SELECT * FROM Product WHERE name = ?;

selectProductByBarcode:
SELECT * FROM Product WHERE barcode = ?;

selectAllProducts:
SELECT * FROM Product ORDER BY name ASC;

selectProductsByCategory:
SELECT * FROM Product WHERE category = ? ORDER BY name ASC;

selectProductsByBrand:
SELECT * FROM Product WHERE brand = ? ORDER BY name ASC;

updateProduct:
UPDATE Product 
SET name = ?, normalized_name = ?, category = ?, subcategory = ?, brand = ?, barcode = ?, unit_type = ?, updated_at = ?
WHERE id = ?;

deleteProduct:
DELETE FROM Product WHERE id = ?;

-- Fuzzy search for product matching during OCR processing
searchProductsByNormalizedName:
SELECT * FROM Product 
WHERE normalized_name LIKE '%' || ? || '%' 
ORDER BY name ASC;

-- Advanced search combining name, brand, and category
searchProducts:
SELECT * FROM Product 
WHERE (name LIKE '%' || ? || '%' OR normalized_name LIKE '%' || ? || '%')
AND (brand IS NULL OR brand LIKE '%' || ? || '%')
AND (category IS NULL OR category LIKE '%' || ? || '%')
ORDER BY 
    CASE 
        WHEN name = ? THEN 1
        WHEN name LIKE ? || '%' THEN 2
        WHEN normalized_name LIKE ? || '%' THEN 3
        ELSE 4
    END,
    name ASC;

-- Get distinct categories for filtering
selectDistinctCategories:
SELECT DISTINCT category FROM Product WHERE category IS NOT NULL ORDER BY category;

-- Get distinct brands for filtering
selectDistinctBrands:
SELECT DISTINCT brand FROM Product WHERE brand IS NOT NULL ORDER BY brand;