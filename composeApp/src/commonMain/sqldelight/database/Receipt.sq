-- Receipt table for storing scanned receipt data
CREATE TABLE IF NOT EXISTS Receipt (
    id TEXT PRIMARY KEY NOT NULL,
    store_id TEXT,
    store_name TEXT NOT NULL, -- Fallback if store_id is null
    total_amount REAL NOT NULL,
    tax_amount REAL DEFAULT 0.0,
    discount_amount REAL DEFAULT 0.0,
    receipt_date INTEGER NOT NULL, -- Unix timestamp
    scan_date INTEGER NOT NULL, -- Unix timestamp
    receipt_number TEXT,
    cashier_id TEXT,
    payment_method TEXT,
    currency TEXT DEFAULT 'EUR',
    raw_ocr_text TEXT, -- Original OCR text for debugging/reprocessing
    ocr_confidence REAL, -- OCR processing confidence score
    image_path TEXT, -- Path to stored receipt image (optional)
    is_validated INTEGER DEFAULT 0, -- Boolean: user has validated OCR results
    notes TEXT,
    created_at INTEGER NOT NULL, -- Unix timestamp
    updated_at INTEGER NOT NULL, -- Unix timestamp
    FOREIGN KEY (store_id) REFERENCES Store(id) ON DELETE SET NULL
);

-- Indexes for performance
CREATE INDEX IF NOT EXISTS idx_receipt_store_id ON Receipt(store_id);
CREATE INDEX IF NOT EXISTS idx_receipt_receipt_date ON Receipt(receipt_date);
CREATE INDEX IF NOT EXISTS idx_receipt_scan_date ON Receipt(scan_date);
CREATE INDEX IF NOT EXISTS idx_receipt_total_amount ON Receipt(total_amount);
CREATE INDEX IF NOT EXISTS idx_receipt_validated ON Receipt(is_validated);

-- Receipt queries
insertReceipt:
INSERT INTO Receipt(
    id, store_id, store_name, total_amount, tax_amount, discount_amount,
    receipt_date, scan_date, receipt_number, cashier_id, payment_method, 
    currency, raw_ocr_text, ocr_confidence, image_path, is_validated, 
    notes, created_at, updated_at
) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

selectReceiptById:
SELECT * FROM Receipt WHERE id = ?;

selectAllReceipts:
SELECT * FROM Receipt ORDER BY receipt_date DESC;

selectReceiptsByStore:
SELECT * FROM Receipt WHERE store_id = ? ORDER BY receipt_date DESC;

selectReceiptsByDateRange:
SELECT * FROM Receipt 
WHERE receipt_date BETWEEN ? AND ? 
ORDER BY receipt_date DESC;

selectReceiptsByMonth:
SELECT * FROM Receipt 
WHERE receipt_date BETWEEN ? AND ? 
ORDER BY receipt_date DESC;

selectRecentReceipts:
SELECT * FROM Receipt 
ORDER BY scan_date DESC 
LIMIT ?;

selectUnvalidatedReceipts:
SELECT * FROM Receipt 
WHERE is_validated = 0 
ORDER BY scan_date DESC;

updateReceipt:
UPDATE Receipt 
SET store_id = ?, store_name = ?, total_amount = ?, tax_amount = ?, 
    discount_amount = ?, receipt_date = ?, receipt_number = ?, 
    cashier_id = ?, payment_method = ?, currency = ?, raw_ocr_text = ?, 
    ocr_confidence = ?, image_path = ?, is_validated = ?, notes = ?, 
    updated_at = ?
WHERE id = ?;

updateReceiptValidation:
UPDATE Receipt 
SET is_validated = ?, updated_at = ?
WHERE id = ?;

deleteReceipt:
DELETE FROM Receipt WHERE id = ?;

-- Analytics queries
selectTotalSpendingByDateRange:
SELECT SUM(total_amount) AS total_spending
FROM Receipt 
WHERE receipt_date BETWEEN ? AND ?;

selectSpendingByStore:
SELECT store_name, SUM(total_amount) AS total_spending, COUNT(*) AS receipt_count
FROM Receipt 
WHERE receipt_date BETWEEN ? AND ?
GROUP BY store_id, store_name
ORDER BY total_spending DESC;

selectMonthlySpending:
SELECT 
    strftime('%Y-%m', datetime(receipt_date, 'unixepoch')) AS month,
    SUM(total_amount) AS total_spending,
    COUNT(*) AS receipt_count
FROM Receipt 
GROUP BY month
ORDER BY month DESC;

-- Search receipts
searchReceipts:
SELECT * FROM Receipt 
WHERE store_name LIKE '%' || ? || '%' 
OR receipt_number LIKE '%' || ? || '%'
OR notes LIKE '%' || ? || '%'
ORDER BY receipt_date DESC;