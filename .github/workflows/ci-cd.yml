name: iOS CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      deploy_target:
        description: "Deploy target"
        required: true
        default: "none"
        type: choice
        options:
          - none
          - testflight
          - appstore

permissions:
  contents: read

env:
  FASTLANE_SKIP_UPDATE_CHECK: 1
  FASTLANE_HIDE_GITHUB_ISSUES: 1
  FASTLANE_DISABLE_COLORS: 1
  FASTLANE_OPT_OUT_USAGE: 1

jobs:
  build-and-test:
    runs-on: macos-26
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Ruby (for Fastlane)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "26.0"

      - name: Cache derived data
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ~/Library/Caches/com.apple.dt.Xcode
          key: ${{ runner.os }}-xcode-${{ hashFiles('**/project.pbxproj') }}
          restore-keys: |
            ${{ runner.os }}-xcode-

      - name: Build and Test
        run: |
          xcodebuild clean build test \
            -project "Alles Teurer.xcodeproj" \
            -scheme "Alles Teurer" \
            -destination "platform=iOS Simulator,name=iPhone 15,OS=17.2" \
            -enableCodeCoverage YES \
            CODE_SIGNING_ALLOWED=NO

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            ~/Library/Developer/Xcode/DerivedData/**/Build/Products/**/coverage.profdata
            ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult

      - name: Archive for Release
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
        run: |
          xcodebuild archive \
            -project "Alles Teurer.xcodeproj" \
            -scheme "Alles Teurer" \
            -archivePath "${{ runner.temp }}/AllesTeurer.xcarchive" \
            -destination "generic/platform=iOS"
            
          xcodebuild -exportArchive \
            -archivePath "${{ runner.temp }}/AllesTeurer.xcarchive" \
            -exportPath "${{ runner.temp }}" \
            -exportOptionsPlist "ExportOptions.plist"

      - name: Upload IPA artifact
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: AllesTeurer-${{ github.sha }}.ipa
          path: ${{ runner.temp }}/*.ipa

  deploy-testflight:
    if: (github.ref == 'refs/heads/develop' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_target == 'testflight')
    needs: build-and-test
    runs-on: macos-26
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Download IPA
        uses: actions/download-artifact@v4
        with:
          name: AllesTeurer-${{ github.sha }}.ipa

      - name: Deploy to TestFlight
        env:
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
        run: |
          bundle exec fastlane pilot upload \
            --ipa "*.ipa" \
            --skip_waiting_for_build_processing true

  deploy-appstore:
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_target == 'appstore')
    needs: build-and-test
    runs-on: macos-26
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Download IPA
        uses: actions/download-artifact@v4
        with:
          name: AllesTeurer-${{ github.sha }}.ipa

      - name: Submit to App Store
        env:
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
        run: |
          bundle exec fastlane deliver \
            --ipa "*.ipa" \
            --skip_metadata true \
            --skip_screenshots true \
            --submit_for_review false
