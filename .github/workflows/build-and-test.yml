name: Build and Test

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - "**.md"
      - "docs/**"
      - ".github/**"
      - "!.github/workflows/**"
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - "**.md"
      - "docs/**"
  workflow_dispatch:
    inputs:
      deploy_target:
        description: "Deploy to environment"
        required: false
        default: "none"
        type: choice
        options:
          - none
          - staging
          - production

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write
  checks: write

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dorg.gradle.parallel=true -Dorg.gradle.caching=true
  JAVA_VERSION: "21"
  XCODE_VERSION: "26.0" # Version 26 actually available on macos-26
  RUBY_VERSION: "3.4"

jobs:
  # Quick validation job that runs first
  validate:
    name: Validate & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Cache Kotlin Native
        uses: actions/cache@v3
        with:
          path: |
            ~/.konan
            ~/.gradle/kotlin
          key: ${{ runner.os }}-kotlin-${{ hashFiles('**/*.gradle.kts', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-kotlin-

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2
        timeout-minutes: 2

      - name: Run Detekt
        run: ./gradlew detekt
        timeout-minutes: 5

  # Android build and test - runs in parallel with iOS
  build-android:
    name: Build & Test Android
    runs-on: ubuntu-latest
    needs: validate
    outputs:
      build-success: ${{ steps.build.outcome == 'success' }}
      apk-path: ${{ steps.build.outputs.apk-path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Cache Kotlin Native
        uses: actions/cache@v3
        with:
          path: |
            ~/.konan
            ~/.gradle/kotlin
          key: ${{ runner.os }}-kotlin-${{ hashFiles('**/*.gradle.kts', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-kotlin-

      - name: Cache build outputs
        uses: actions/cache@v3
        with:
          path: |
            **/build/kotlin
            **/build/tmp/kotlin-classes
            **/build/intermediates
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Run Tests
        run: ./gradlew test --continue --parallel
        timeout-minutes: 10

      - name: Build Android Debug APK
        id: build
        run: |
          ./gradlew :composeApp:assembleDebug --parallel
          echo "apk-path=composeApp/build/outputs/apk/debug/composeApp-debug.apk" >> $GITHUB_OUTPUT
        timeout-minutes: 15

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-android
          path: |
            build/reports/
            */build/reports/
            */build/test-results/
          retention-days: 3

      - name: Upload APK
        if: steps.build.conclusion == 'success' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: ${{ steps.build.outputs.apk-path }}
          retention-days: 7

      - name: Comment PR with APK link
        if: github.event_name == 'pull_request' && steps.build.conclusion == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Build successful! APK artifact available in workflow run.'
            })

  # iOS build - runs in parallel with Android
  build-ios:
    name: Build iOS
    runs-on: macos-26 # Do not use latest. it has to be 26 for Xcode 26
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Kotlin Native
        uses: actions/cache@v3
        with:
          path: |
            ~/.konan
            ~/.gradle/kotlin
          key: ${{ runner.os }}-kotlin-${{ hashFiles('**/*.gradle.kts', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-kotlin-

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: |
            composeApp/iosApp/Pods
            ~/Library/Caches/CocoaPods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Cache Xcode DerivedData
        uses: actions/cache@v3
        with:
          path: composeApp/build/ios
          key: ${{ runner.os }}-xcode-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-xcode-

      - name: Build KMP shared modules
        run: ./gradlew :shared:build -x test --parallel
        timeout-minutes: 10

      - name: Build iOS Simulator
        run: |
          cd composeApp
          xcodebuild -scheme composeApp \
            -configuration Debug \
            -sdk iphonesimulator \
            -derivedDataPath build/ios \
            -parallelizeTargets \
            build
        timeout-minutes: 20

      - name: Upload iOS build logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-logs
          path: composeApp/build/ios/Logs/
          retention-days: 3

  # Simplified deployment - only via manual trigger
  deploy:
    name: Deploy to ${{ github.event.inputs.deploy_target }}
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    if: |
      github.event_name == 'workflow_dispatch' && 
      github.event.inputs.deploy_target != 'none' &&
      needs.build-android.outputs.build-success
    environment:
      name: ${{ github.event.inputs.deploy_target }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby
        if: github.event.inputs.deploy_target == 'production'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-debug-apk

      - name: Deploy to Staging (Firebase App Distribution)
        if: github.event.inputs.deploy_target == 'staging'
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: testers
          file: android-debug-apk/composeApp-debug.apk
          releaseNotes: |
            Branch: ${{ github.ref }}
            Commit: ${{ github.sha }}

      - name: Deploy to Production
        if: github.event.inputs.deploy_target == 'production'
        run: |
          echo "ðŸš€ Production deployment triggered for commit ${{ github.sha }}"
          echo "Manual steps required:"
          echo "1. Download the APK artifact"
          echo "2. Sign with release keys locally"
          echo "3. Upload to Google Play Console"
          echo "4. Create iOS release build on local Mac"
          echo "5. Submit to App Store Connect"

  # Status summary with parallel job results
  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [validate, build-android, build-ios]
    if: always()
    steps:
      - name: Generate summary
        run: |
          echo "## ðŸ“Š Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "### Build Status" >> $GITHUB_STEP_SUMMARY
          echo "| Stage | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Validation | ${{ needs.validate.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Android | ${{ needs.build-android.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| iOS | ${{ needs.build-ios.result || 'skipped' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "### Deployment" >> $GITHUB_STEP_SUMMARY
            echo "Target: **${{ github.event.inputs.deploy_target }}**" >> $GITHUB_STEP_SUMMARY
          fi

          echo "### Performance Metrics" >> $GITHUB_STEP_SUMMARY
          echo "- Workflow triggered by: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- Parallel execution: âœ… Enabled" >> $GITHUB_STEP_SUMMARY
